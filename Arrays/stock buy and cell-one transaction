Stock Buy and Sell â€“ Max one Transaction Allowed
Given an array prices[] of length N, representing the prices of the stocks on different days, the task is to find the maximum profit possible by buying and selling the stocks on different days when at most one transaction is allowed. Here one transaction means 1 buy + 1 Sell.

Note: Stock must be bought before being sold.

Time complexity: O(n)
Space complexity: O(1)

class Solution {
    public int maximumProfit(int prices[]) {
        // pricesay length
        int n = prices.length;
        
        //minStock, profit, maxProfit
        int minStock = Integer.MAX_VALUE;
        int profit = Integer.MIN_VALUE;
        int maxProfit = Integer.MIN_VALUE;
        
        // iterating pricesay to find max profit
        for(int i=0; i<n; i++){
            if(prices[i] < minStock){
                minStock = prices[i];    //minimum stock value
            }
            profit = prices[i] - minStock;   
            maxProfit = Math.max(maxProfit, profit);
        }
        
        // returning maximum profit;
        return Math.max(maxProfit, profit);
    }
}
