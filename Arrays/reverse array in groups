Reverse array in groups
Given an array arr of positive integers. Reverse every sub-array group of size k.
Note: If at any instance, k is greater or equal to the array size, then reverse the entire array. You shouldn't return any array, modify the given array in place.

Time complexity: O(n)
Space complexity: O(1)

class Solution {
    
    //swap function
    void swap(ArrayList<Long> arr, int a, int b){
        long temp = arr.get(a);
        arr.set(a,arr.get(b));
        arr.set(b,temp);
    }
    
    // Function to reverse every sub-array group of size k.
    void reverseInGroups(ArrayList<Long> arr, int k) {
        
        //size of array
        int n = arr.size();
        
        // iterating stepwise for reverse in groups
        for(int i=0; i<n; i+=k){
            int left = i;
            int right = Math.min(i+k-1 , n-1);
            
            while(left < right){
                swap(arr, left, right);
                left++;
                right--;
            }
        }
    }
}
